# Generated by Django 5.2.4 on 2025-07-15 18:45

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('passport_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid passport number', regex='^[A-Z0-9]{5,20}$')])),
                ('nationality', models.CharField(choices=[('Filipino', 'Filipino'), ('Indonesian', 'Indonesian'), ('Indian', 'Indian'), ('Sri Lankan', 'Sri Lankan'), ('Ethiopian', 'Ethiopian'), ('Kenyan', 'Kenyan'), ('Bangladeshi', 'Bangladeshi'), ('Nepalese', 'Nepalese'), ('Other', 'Other')], max_length=50)),
                ('religion', models.CharField(blank=True, choices=[('Islam', 'Islam'), ('Christianity', 'Christianity'), ('Hinduism', 'Hinduism'), ('Buddhism', 'Buddhism'), ('Other', 'Other')], max_length=50, null=True)),
                ('profession', models.CharField(choices=[('Housemaid', 'Housemaid'), ('Cleaner', 'Cleaner'), ('Cook', 'Cook'), ('Nanny', 'Nanny'), ('Caregiver', 'Caregiver'), ('Driver', 'Driver'), ('Gardener', 'Gardener'), ('Other', 'Other')], max_length=50)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], max_length=20, null=True)),
                ('age', models.IntegerField()),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Booked', 'Booked'), ('On Leave', 'On Leave')], default='Available', max_length=20)),
                ('image', models.ImageField(blank=True, null=True, upload_to='workers/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('experience_years', models.IntegerField(default=0, help_text='Years of experience')),
                ('languages_spoken', models.CharField(blank=True, help_text='Languages spoken, separated by commas', max_length=200)),
                ('skills', models.TextField(blank=True, help_text='Special skills or certifications')),
                ('salary_expectation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number', regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_start_date', models.DateField(blank=True, null=True)),
                ('contract_duration', models.CharField(blank=True, help_text='e.g., 1 year, 6 months', max_length=50, null=True)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_requests', to='api.worker')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
